/**
 *  @file   _touchList.scss
 *  @author John Cockrell <john@meetup.com>
 *  @since  2013-06-27
 *
 *  @description
 *	 File intended to be consolidated with _lists_m.scss in Sassquatch.
 *	 Determines styles for the `touchList` list layout style.
 */


%dividerBottom {
	// A divider applied to the top of every list-item-like element in a
	// touchlist. Applying it to <li> results in nesting clusterpuck, so it's
	// applied to special hook classes for granularity:
	//
	//	`.touchList-item`
	//	`.touchList-load-more-link`
	//	`.touchList-jump-link`
	border-bottom: 1px solid $C_line;
}

%dividerLeft {
	border-left: 1px solid $C_line;
	// NOTE A border applied ONLY to `touchList-items` in a
	// `touchList--withInlineChildren` list. Right now, this gets applied to 2n
	// cells, but we may want to change that.
}


/*  ======================================================================= */
/*  TOUCHLIST STYLES  */


%layout_touchList {
	// RESETS {
	font-size: 16px;
	list-style: none;
	padding: 0;
	margin: 0;
	// }
}

.touchList {
	@extend %layout_touchList;

	.touchList-item:last-child {
	   border-bottom: none;
	}
}

.touchList--rounded {
	@extend %layout_touchList;

	.touchList-item:first-child {
		// TODO Add rounding to top if in a rounded container
	}

	.touchList-item:last-child {
		// TODO Add rounding to bottom if in a rounded container
	}
}


.touchList--withInlineChildren {
	@extend %layout_touchList;
	@extend %clearfix;  // Used for multi-cell up inserts

    .touchList-item:nth-last-child(2),
    .touchList-item:last-child {
        border-bottom: none;
        // Last, and next to last children do not get a bottom border.
    }
}


/*  ======================================================================= */
/*  TOUCHLIST COMMON STYLES */

.touchList-label {
	padding: 0; // RESET
	font-size: $FS_base;
	line-height: $LH_standard;
	.touchList & {
		// RESET
		color: $C_text_headline;  // overloaded selector to override link color
	}
}

.touchList-text {
	margin: 0;
	padding: 0;
	font-size: $FS_small;
	line-height: $LH_standard;
}

.touchList-caption {
	margin: 0;  // RESET
	padding: 0; // RESET
	font-size: $FS_small;
	line-height: $LH_standard;
}

.icon-disclosure-right--touchList-item {
	color: $C_line;
	vertical-align: -0.2em;
	// Arbitary value, optical alignment
}


.ffbox--touchList-item {
	height: $H_touchTargetDefault;
	padding: 0 $P_secondary;
	// NOTE: For whatever mysterious reason, Safari 6 (iOS 6 and OS X) does
	// not know how to display heights correctly with padding on an element
	// set to `display: table-cell` with `box-sizing: border-box`.
	//
	// Essentially, when a height value is applied, it calculates the height
	// of the table cell as $height + $pad_top + $pad_bottom, instead of the
	// correct $height - ($pad_top + $pad_bottom).
	//
	// The result is that on Safari 6, and only Safari 6, the cells are the
	// sum of top and bottom padding taller than they should be.
	//
	// The other mystery is that this works perfectly fine with percentage
	// widths and heights--it's only the fixed unit values that cause the
	// rendering bug in iOS 6.
	//
	// My solution is to basically only use top and bottom paddings on
	// child units you don't want to collide with the edges--assuming there's
	// a case in which they would, like the attendee item--and leave top and
	// bottom padding off of this outer element.
	//
	// Having padding on all four sides would
	// be a ton less work.
}

.ffbox--touchList-input {
	height: $H_touchTargetDefault;
	// NOTE: Needed to provide height to input items wrapped in a fix-flex
	// box, so they can have a consistent height with the other cells.
	.touchList-input--hasBlockLabel & {
		margin-top: -0.5em;  // snuggle up with block label
	}
}



/*  ======================================================================= */
/*  TOUCHLIST ITEMS  */

/*  These are all <li> elements, but only these are getting borders, rather
 *  than blanket coating all <li> elements, nested, first child, or otherwise
 *  with this style. It's a more targeted, conservative approach.
 */
.touchList-item {
	@extend %dividerBottom;
}

.touchList-item--padded {
	padding: $P_secondary;
}

.touchList--withInlineChildren .touchList-item {
	@include box-sizing('border');

	&.lastUnit,
	&:nth-child(even) {
	   @extend %dividerLeft;
	}
}

.touchList-item-ffbox {
	padding: 0 $P_secondary;
	height: $H_touchTargetDefault;
}

.touchList-item-action {
	// the anchor just inside standard touchList-items shouldn't appear
	// like a normal link - it's just a list item that happens to be
	// touchable. Extra specificity to override a:link
	.touchList-item & {
		color: $C_text;
		display: block;
	}
}


/*  ======================================================================= */
/*  TOUCHLIST ATTENDEE ITEM */

.touchList-attendee-photo,
.touchList-attendee-info {
	padding-top: $P_secondary;
	padding-bottom: $P_secondary;
}

.touchList-attendee-info {
	padding-left: $P_secondary;
}

.touchList-attendee-name {
	@extend %textTruncate;
	line-height: $LH_condensed;
}

.touchList-guestcount {
	// NOTE: This is nested inside a touchList-label, so these font
	// sizes are relative the the base font sizes for a standard touchList
	// label

	font-size: ($FS_small / $FS_base) * 1em;
	// NOTE: dividing any two parameters with the same units strips the units.
	// We need to multiply by an em to make sure this number is in ems.

	font-weight: normal;
	color: $C_gray60;
	vertical-align: 1px;
	// Bump it up a hair, because parentheses are all dangly.
}

.touchList-attendee-role,
.touchList-attendee-bio,
.touchList-attendee-funfact-description,
.touchList-attendee-ledger {
	color: $C_gray60;
}

.touchList-attendee-role {
	@extend %textTruncate;
	line-height: $LH_standard;
}

.touchList-attendee-funfact-description {
	padding-left: $P_secondary;
}

.touchList-attendee-actions {
	white-space: nowrap;
	padding: 0 $P_secondary;
}


.touchList-attendee-actions .button {
	// RESET {
	margin: 0;
	// }

	// NOTE: Right now, all the buttons in the "secondary actions" block are
	// set to `inline-block` display. This will provide a 4px (roughly) gap
	// organically between each button--no padding/margin needed.
	//
	// If we change that in the future, button-level padding should probably
	// work together with the secondary-actions wrapper.
}





/*  ======================================================================= */
/*  TOUCHLIST EVENT ITEM */

.touchList-event-info {
	padding-top: 1.667em;
	padding-bottom: 1.250em;
}

.touchList-event-groupname {
	color: $C_gray70;
}

.touchList-event-datetime,
.touchList-event-name {
	color: $C_darkgray_lighter;
}

.touchList-event-reldate {
	background-color: $C_red;
	padding:0.333em 0.417em;
	color:#FFF;
	margin-right:0.167em;
    font-size:0.813em;
}

.touchList-event-dates {
	padding-bottom:0.833em;
}

/*  ======================================================================= */
/*  TOUCHLIST ITEM GEMS  */

.touchList-gem {
	display: block;
	width: $W_gem;
	height: $H_gem;
	text-align: center;
	.ffbox--touchList-input  & {
		padding-left: $P_secondary / 2;
	}
	// NOTE: arbitary optical value; $P_secondary looked too wide.

	// Assumed: all icons are properly nested in <i> elements, and using
	// Red Label.
	//
	i {
		color: $C_darkgray_lighter;
		vertical-align: middle;
	}

	img,
	div {
		display: inline-block;
		border-radius: $defaultRadius;
		height: 100%;
		width: 100%;
		background-size: cover;
		background-position: center center;
		background-repeat: no-repeat;
	}
}

/*  This is the Michal Czernow vertical align hack, since just doing
 *  another `display:table-cell` inside a `display:table-cell` doesn't
 *  make sense semantically, meaning it's more likely to break based
 *  on how a browser renders tables.
 *
 *  See: http://css-tricks.com/centering-in-the-unknown/
 */
.touchList-gem:before {
	content: '';
	display: inline-block;
	height: 100%;
	vertical-align: middle;
	// Inline-block elements are usually ~4-5px wide in the browser
	// calculations, somewhat arbitrarily. We have to pull this
	// pseudo-element out of the way so that the image or icon we're
	// socketing in the div.gem doesn't get pushed out.
}


/*  ======================================================================= */
/*  TOUCHLIST EMPTY ITEMS  */

.touchList-item--empty {
	@extend %dividerBottom;
	padding: ($P_secondary* 2) $P_secondary;
	background-color: $C_gray96;
}

.touchList-item--empty-label {
	font-size: $FS_base;
	line-height: $LH_standard;
	color: $C_gray70;
	text-align: center;
	text-shadow: 0 1px 0 white;
}


/*  ======================================================================= */
/*  TOUCHLIST ITEM NORMAL FONT-WEIGHT LABEL  */
.touchList-item--normalWeightLabel .touchList-label {
	font-weight: normal;
}


/*  ======================================================================= */
/*  TOUCHLIST DISCLOSURE ITEMS  */

.touchList-item--disclosure {
	.touchList-item--disclosure-label {
		padding-left: 0.5em;
	}
}

.touchList-text--disclosure {
	color: $C_gray60;
	white-space: nowrap;
	// NOTE: Needed to prevent the value from folding over each other when
	// packed tightly in a ffbox-fix cell.

	line-height: 1;
	// NOTE: Needed to get the smaller font size centered inline with the
	// label to the left side of the disclosure item
}

/* this is implemented as a set of disclosure items that open up
other panels/sections of the UI in mug settings. It's more of a
nav menu than a form, and so gets styled differently than
form-oriented disclosure items */
.touchList--menu {
	$scaleFactor: 1.2;
	background: none;
	border: none;
	.touchList-item {
		border-color: $C_gray;
	}
	.touchList-label {
		color: $C_darkgray_lighter;
		font-size: $FS_base * $scaleFactor;
		font-weight: bold;
	}
}


/*  ======================================================================= */
/*  TOUCHLIST JUMP LINKS AND LOAD MORE LINKS  */

.touchList-item--loadMore,
.touchList-item--jumpLink {
    @extend %dividerBottom;
}

.touchList-label--loadMore {
	text-align: center;
	color: $C_darkgray_lighter;
}


/*  ======================================================================= */
/*  TOUCHLIST SEGMENT COMPONENTS */


.touchList-segment {
	@extend %dividerBottom;
}

.touchList-segment-header {
	@extend %textDisableSelection;
	@extend %dividerBottom;

	color: $C_darkgray_lighter;
	font-size: $FS_small;
	font-weight: bold;
	line-height: 1;
	text-transform: uppercase;

	/* RESET */
	// My brain hurts too much right now to do this math. But the total
	// height needs to be $H_touchTargetMinimum, which this is.
	padding: 0.8em $P_secondary;
	/* END */

	/* EXPERIMENTAL FEATURES */
	/* position: -webkit-sticky;
	 * Partially broken implementation in iOS 6.1.4 means we shouldn't turn
	 * on just yet.
	 */
	background-color: white;
	top: 0px;
	/* END */
}

.touchList-segment-content {
	/* RESET */
	margin: 0;
	padding: 0;
	list-style: none;
	/* END */
}



/*** touchList candidates ***/
.touchList-item-actionIcon {
	// styling for element that can be appended to touchList ffbox
	// e.g. for a 'delete' x icon
	// <a href='#' class='ffbox-fix touchList-item-actionIcon'><i class='icon icon-x'></i></a>
	padding: 0 $P_secondary;
	.touchList-item & {
		// extra specificity to override a:link
		color: $C_line;
	}
}

/*  list heading - sits outside touchList, might be better as more generic
	heading style but it just looks so nice with touchLists */
.touchList-heading {
	color: $C_darkgray_lighter;
	font-size: 16px;
	margin-bottom: 0.5em;
}

